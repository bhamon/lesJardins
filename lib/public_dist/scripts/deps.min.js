"use strict";angular.module("freyja",["ngResource","ngCookies"]),angular.module("freyja").provider("freyja-sessionHandler",function(){function e(e,t){if(!angular.isString(e))throw new Error("Invalid [token] parameter");Object.defineProperty(this,"token",{enumerable:!0,value:e}),Object.defineProperty(this,"remindMe",{enumerable:!0,value:!!t}),Object.defineProperty(this,"data",{value:{}}),Object.defineProperty(this,"_rights",{value:{}})}function t(e,t,o,r,n){Object.defineProperty(this,"$q",{value:e}),Object.defineProperty(this,"$injector",{value:t}),Object.defineProperty(this,"$cookies",{value:o}),Object.defineProperty(this,"_cookieName",{value:r}),Object.defineProperty(this,"_hooks",{value:n}),Object.defineProperty(this,"_session",{writable:!0,value:null})}e.prototype.hasRight=function(e){return!!this._rights[e]},e.prototype.addRight=function(e){this._addRights([e])},e.prototype.addRights=function(e){if(!angular.isArray(e))throw new Error("Invalid [rights] parameter");var t=this;angular.forEach(e,function(e){if(!angular.isString(e))throw new Error("Invalid right: "+e);t._rights[e]=!0})},e.prototype.removeRight=function(e){delete this._rights[e]},t.prototype._invokeHook=function(e,t){var o=this._hooks[e];if(!o)throw new Error("Unknown session hook: "+e);return this.$injector.invoke(o,void 0,t)},t.prototype.init=function(){if(this._session)return this.$q.resolve();var t=this.$cookies.get(this._cookieName);return t?(this._session=new e(t,!0),this.$q.when(this._invokeHook("populate",{session:this._session}))):this.$q.reject()},t.prototype.isAuthenticated=function(){return!!this._session},t.prototype.getSession=function(){if(!this._session)throw new Error("Session not initialized");return this._session},t.prototype.logIn=function(t,o){if(this._session)throw new Error("Session already initialized");if(!t||!angular.isString(t))throw new Error("Invalid [token] parameter");return this._session=new e(t,o),this._session.remindMe&&this.$cookies.put(this._cookieName,this._session.token),this.$q.when(this._invokeHook("populate",{session:this._session}))},t.prototype.recover=function(){var e=this;return this.$q.when(this._invokeHook("recover")).then(function(t){if(null==t)return $q.reject();if(!angular.isObject(t))throw new Error("Invalid [session] parameter");return e.logIn(t.token,t.remindMe)})},t.prototype.logOut=function(){if(!this._session)throw new Error("Session not initialized");var e=this;return this.$q.when(this._invokeHook("remove"))["finally"](function(){e._session=null,e.$cookies.remove(e._cookieName)})};var o="sessionToken",r={populate:function(){},recover:function(){return null},remove:function(){}};this.setCookieName=function(e){if("string"!=typeof e)throw new Error("Invalid [cookieName] parameter");o=e},this.attachSessionHook=function(e,t){if(!(e in r))throw new Error("Unknown session hook type: "+e);if(!angular.isFunction(t)&&!angular.isArray(t))throw new Error("Invalid [hook] parameter");r[e]=t},this.$get=["$q","$injector","$cookies",function(e,n,i){return new t(e,n,i,o,r)}]}),angular.module("freyja").factory("freyja-api",["$q","$resource","freyja-sessionHandler",function(e,t,o){var r=function(){return o.isAuthenticated()?"Bearer "+o.getSession().token:void 0},n=function(t){return 401==t.status?(console.log("api::handleAuthentication -> 401"),o.recover().then(function(){console.log(t),console.log(t.config)},function(o){return console.error("Error caught in session recovery attempt"),console.error(o),e.reject(t)})):e.reject(t)};return{createResource:function(e,o,i,s){var a={};Object.keys(i).forEach(function(e){var t=angular.merge({},i[e]);t.requiresAuth&&(t.withCredentials=!0,t.headers={Authorization:r},t.interceptor={responseError:n}),a[e]=t});var u=t(e,o,a,s);return Object.keys(a).concat(["get","save","query","remove","delete"]).forEach(function(e){var t=i[e];t?t.member||delete u.prototype[e]:(delete u[e],delete u.prototype[e])}),u}}}]);